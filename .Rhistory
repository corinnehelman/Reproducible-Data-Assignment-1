this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
nyc <- now(tz="America/New_York")
nyc
nyc <- nyc + days(2)
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone ="Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz="Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch
stopwatch()
community <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
strsplit(names(community), split = "wgtp")[123]
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
clean <- gsub(",","",data[,5])
clean <- gsub(",","",gdp[,5])
mean(as.numeric(clean[1:215]),na.rm = TRUE)
gdp <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv")
edu <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv")
setnames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
library(dplyr)
setnames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
?setNames
setNames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
setNames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name",  "gdp"))
setNames(gdp, c("X", "X.1", "X.3", "X.4"), cc("CountryCode", "rankingGDP", "Long.Name", "gdp"))
setNames(gdp, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
library(data.table)
gdp <- fread("GDP.csv", skip = 4, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "Economy", "Total"))
gdp <- fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", skip = 4, nrows = 190, select = c(1, 2, 4, 5), col.names = c("CountryCode", "Rank", "Economy", "Total"))
all <- merge(gdp, edu, by = "CountryCode")
table(grepl("june", tolower(all$Special.Notes)), grepl("fiscal year end", tolower(all$Special.Notes)))[4]
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
length(grep("^2012",sampleTimes))
sum(weekdays(as.Date(sampleTimes[grep("^2012",sampleTimes)]))=="Monday")
library(swirl)
swirl()
head(cars)
with(cars, plot(speed, dist))
text(x=mean(cars$speed), y=max(cars$dist), "SWIRL rules!")
head(state)
table(state$retion)
table(state$region)
xypolt(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, state, c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
head(airquality)
range(airquality$Ozone, na.rm=TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab="Month", ylab="Ozone(ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone(ppb)", col.axis="blue", col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main="Ozone and wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set="n")
plot(airquality$Wind, type="n",airquality$Ozone)
title(main="Wind and Ozone in NYC")
may <- airquality$Month==5
may <- subset(airquality, Month==5)
?pch
with(may, plot(Wind, Ozone, pch=2, col="blue"))
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay <- subset(airquality$Month==!5)
notmay <- subset(!airquality$Month==5)
notmay <- subset(airquality$Month %in% c(6,7,8,9))
skip
notmay <- subset(airquality, Month!=5)
?pch
with(notmay, plot(wind, ozone, pch=8; col="red"))
skip
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright", pch=c(17,8), col=c("blue","red"))
legend("topright", pch=c(17,8), col=c("blue","red"), legend=c("May", "Other Months"))
abline(lty=2, lwd=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow = (1,2))
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data=airquality, pch=8, col="red",  main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1)
)
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
v2
myedit('plot1.R')
library(swirl)
swirl()
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"),local=TRUE)
xyplot(price~carat |color*cut, data=diamonds, strip=FALSE, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
xyplot(price~carat |color*cut, data=diamonds, pch=20, xlab=myxlab, ylab=myylab, main=mymain)
sample(colors(10))
sample(colors(),10)
pal <- colorRamp(c"red","blue")
pal <- colorRamp(c("red","blue"))
pal
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun construct
?fun
?rgb
p3 <- colorRampPalette(c("blue","green"))
p3 <- colorRampPalette(c("blue","green"),alpha=.5)
p3(5)
plot(x,y, pch=19, col=rgb(0,.5,.5))
plot(x,y, pch=19, col=rgb(0,.5,.5,.3) )
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorR(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
qplot(displ,hwym data=mpg)
qplot(displ,hwy, data=mpg)
qplot(displ,hwy, data=mpg, col=drv)
qplot(displ,hwy, data=mpg, color=drv)
qplot(displ,hwy, data=mpg, color=drv, geom=c("point","smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=.~drv, binwidth=2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth", facets=.~drv))
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
g <- ggplot(mpg, aes(displ~hwy))
g <- ggplot(mpg, aes(displ,hwy) )
summary(g)
g+geom_point()
g+geom_point(geom_smooth())
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(lm)
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm", facet_grid=.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ggtitle(main="Swirl Rules!")
g+geom_point()+geom_smooth(method="lm") + facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2, aes(color=drv))
g+ geom_point(aes(color=drv), labs(title="Swirl Rules!"), labs=c(x="Displacement", y="Hwy Mileage"))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g+geom_smooth(aes(color=drv), size=2, alpha=0.5)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(aes(color=drv), size=2, alpha=0.5)+geom_smooth(size=4, linetype=3, method="lm", se=FALSE)
g+geom_point(color=drv)+theme.bw(base_family="Times")
g + geom_point(aes(color = drv)) + theme_bw(base_family="Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x=myx, y=myy))
geom_line(g)
g+ geom_line()
g+ geom_line() + ylim(-3,3)
g+ geom_line() + coord_cartesian(ylim= c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year))
)
g+gemo_point()
g+gemo_point(0)
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)+geom_smooth(method="lm", se=FALSE, size=2, color="black")+labs(x="Displacement", y="Highway Mileage", title="Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm") + facets(.~cut)
qplot(carat,price,data=diamonds, color=cut, facets=.~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha=1/3)
cutpoints <-  quantile(diamonds$carat, seq(0,1,length=4), na.rm=TRUE)
cutpoints
diamond$car2 <- cut(diamond$carat, cutpoints)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha=1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut~car2)+gemo_smooth(method="lm", size=3, color="pink")
g + geom_point(alpha=1/3) + facet_grid(cut~car2)+geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price)) +geom_boxplot() + facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
Diet
library(lattice)
xplot
class(xplot)
class(lattice)
head(airquality)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
p
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages(lattice)
install.packages("lattice"")
)
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
install.packages("lattice")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
install.packages("ggplot2")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
?points
?text
?lines
?axis
?lpoints
library(swirl)
swirl()
dist(dataFrame)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5, col="blue")
abline(h=.4, col="red")
5
5
12
abline(h=.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix, col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cs,cy,col=c("red","orange","purple"), pch=3, cex=2, lwd=2)
points(cx,cy,col=c("red","orange","purple"), pch=3, cex=2, lwd=2)
mdist(x,y,cx, cy)
apply(distTmp,2,which.min)
points(x,y, pch=19, cex=2, col=cols[newClust])
points(x,y, pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp,2,which.min)
apply(distTmp2,2,which.min)
points(x,y, pch=10, cex=2, col=cols1[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pch=9, cex=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, centers = 3)
kmobj$iter
kmObj$iter
plot(x,y. col=kmObj$cluster, pch=19, cex=2)
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col=c("black","red","green"), pch=3, cex=3, lwd=3)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y, col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu*matv*diag
matu*diag*matv
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$u[,1] %*% t(svd1$v[,1]) * svd1$d[1]
myImage(a1)
a2 <- svd1$u[,1:2] %*% t(svd1$v[,1:2]) * svd1$d[1]
a2 <- svd1$u[,1:2] %*% t(svd1$v[,1:2]) * svd1$d[1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a2 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
table(ssd$subject))
sum(table(ssd$subject))
table(ssd$activity)
sub1 <-subset(ssd[1,])
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names[,1:12]
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- sub1(x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclusterin, lab.col=unclass(sub1$activity))
myplclust(hclustering, lab.col=unclass(sub1$activity))
mdist <- dist(sub1(x[,10:12]))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(midst)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,c(562,5633)]))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,(c(10:12, maxCon)])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,-c(562,563)], centers=6)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers=6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch=19, ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch=19, ylab="Walkdown Cluster")
dim(pm0)
head(pm0)
cnames
cnames <- strsplit((names, "|", set=TRUE)
cnames <- strsplit(cnames, "|", set=TRUE)
cnames <- strsplit(cnames, "|", fixed=TRUE)
head(cnames)
print(cnames)
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x))
mean(is.na(x0)
)
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
noxplot(log10(x0), log10(x1))
boxplot(log10(x0), log10(x1))
negative <- x1<0
sum(negative, na.rm=TRUE)
mean(negative, na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates <0 as.Date(as.character(dates), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- cnt0$County.Code==63 & cnt0$Site.ID==2008
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow=c(1,2), mar=c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub, x1sub, na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean(Sample.Value), na.rm=TRUE))
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state= names(mn0),mean=mn0)
d1 <- data.frame(state= names(mn1),mean=mn1)
mrg <- merge(d0,d1, by="state")
dim(mrg)
head(mrg)
points(mrg, plot(rep(1,52), mrg[,2], xlim=c(.5,2,.5)))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
knit2html(PA1_template.Rmd)
install.packages(knitr)
install.packages("knitr")
install.packages("knitr")
library(knitr)
knit2html(PA1_template.Rmd)
setwd("C:/Users/helmac1/Documents/Personal/Coursera/Class 5 Programming Assignment 1")
knit2html(PA1_template.Rmd)
knit2html("PA1_template.Rmd")
render(PA1_template)
install.packages(render)
install.packages("rmarkdown")
install.packages("rmarkdown")
render(PA1_template)
library(rmarkdown)
render(PA1_template)
knit2html(PA1_template.Rmd)
